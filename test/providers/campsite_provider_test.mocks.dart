// Mocks generated by Mockito 5.4.6 from annotations
// in roadsurfer_test/test/providers/campsite_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:roadsurfer_test/models/campsite.dart' as _i2;
import 'package:roadsurfer_test/services/api_services.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCampsite_0 extends _i1.SmartFake implements _i2.Campsite {
  _FakeCampsite_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Campsite>> fetchCampsites() =>
      (super.noSuchMethod(
            Invocation.method(#fetchCampsites, []),
            returnValue: _i4.Future<List<_i2.Campsite>>.value(<_i2.Campsite>[]),
          )
          as _i4.Future<List<_i2.Campsite>>);

  @override
  _i4.Future<_i2.Campsite> fetchCampsiteById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchCampsiteById, [id]),
            returnValue: _i4.Future<_i2.Campsite>.value(
              _FakeCampsite_0(
                this,
                Invocation.method(#fetchCampsiteById, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.Campsite>);
}
